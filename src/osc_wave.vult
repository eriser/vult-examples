
external ext_wave(channel:int, index:int) : real @[wave(channels=1,file="wave.wav")];

// Table generated with the @[table] tag
fun wave_table(x) @[table(size=128,min=0.0,max=1.0)] {
   val w = 6.283185307179586 * x;
   return (sin(w)+sin(3.0*w)+sin(5.0*w)+sin(7.0*w))/4.0;
}

fun osc_wave(cv:real) {
   val phase = Osc_phasor.osc_phasor(cv,false);
   val index = int(phase*real(ext_wave_samples()));
   return ext_wave(0,index);
}

fun process(cv) {
   return osc_wave(cv);
}

and noteOn(note:int,velocity:int,channel:int){ }
and noteOff(note:int,channel:int){ }
and controlChange(control:int,value:int,channel:int){ }
and default(){ }