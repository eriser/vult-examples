fun map(x,x0,x1,y0,y1) {
  return (x-x0)*(y1-y0)/(x1-x0) + y0;
}

fun process(cv:real, vel:real, gate:real) {
   // Oscillator levels
   mem level1, level2, level3, level4;
   // Oscillator PW
   mem pw1, pw2, pw3, pw4;
   // LFO
   mem lfo_rate, lfo_pw, lfo_cv, lfo_flt, lfo_shape, lfo_reset;
   // Filter
   mem flt_cut, flt_res, flt_shape;
   // Envelope
   mem attack, decay, sustain, release;


   val lfo = Env_lfo.env_lfo(lfo_rate,lfo_shape,gate*lfo_reset);

   val mod_pw = lfo_pw * lfo;
   val mod_cv = lfo_cv * lfo;
   val mod_flt = lfo_flt * lfo;

   val o1 = Osc_blit.osc_blit(cv+0.001+mod_cv,pw1+mod_pw,0.0);
   val o2 = Osc_blit.osc_blit(cv+0.002+mod_cv,pw2+mod_pw,1.0);
   val o3 = Osc_blit.osc_blit(cv+pw3+mod_cv,pw1+mod_pw,0.0);
   val sub = tanh((5.0*pw4 + 2.0) * Osc_triangle.osc_triangle(cv-1.001+mod_cv,0.0));

   val o = level1*o1+level2*o2+level3*o3+level4*sub;

   val f = Flt_svf.flt_svf(o,flt_cut+mod_flt,flt_res,flt_shape);

   val env = Env_adsr.env_adsr(gate,attack,decay,sustain,release);

   return env*f/2.0;
}

and noteOn(note:int,velocity:int,channel:int){ }
and noteOff(note:int,channel:int){ }
and controlChange(control:int,value:int,channel:int) {
   if(control == 30) level1 = real(value)/127.0;
   if(control == 31) level2 = real(value)/127.0;
   if(control == 32) level3 = real(value)/127.0;
   if(control == 33) level4 = real(value)/127.0;

   if(control == 34) pw1 = real(value)/127.0;
   if(control == 35) pw2 = real(value)/127.0;
   if(control == 36) pw3 = real(value)/127.0;
   if(control == 37) pw4 = real(value)/127.0;

   if(control == 38) lfo_rate = map(real(value),0.0,127.0,-4.0, 1.0);
   if(control == 39) lfo_shape = 3.0 * real(value)/127.0;
   if(control == 40) lfo_pw = map(real(value),0.0, 127.0, -1.0, 1.0);
   if(control == 41) lfo_cv = map(real(value),0.0, 127.0, -1.0, 1.0);
   if(control == 42) lfo_flt =  map(real(value),0.0, 127.0, -3.0, 3.0);
   if(control == 43) lfo_reset = if value > 0 then 1.0 else 0.0;

   if(control == 44) flt_cut = map(real(value),0.0,127.0,-2.0, 5.0);
   if(control == 45) flt_res = real(value)*5.0/127.0;
   if(control == 46) flt_shape = value * 4 / 127;

   if(control == 47) attack = real(value)/127.0;
   if(control == 48) decay = real(value)/127.0;
   if(control == 49) sustain = real(value)/127.0;
   if(control == 50) release = real(value)/127.0;
}
and default(){ }